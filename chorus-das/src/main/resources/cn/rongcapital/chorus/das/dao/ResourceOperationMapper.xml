<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.rongcapital.chorus.das.dao.ResourceOperationMapper" >
  <resultMap id="BaseResultMap" type="cn.rongcapital.chorus.das.entity.ResourceOperation" >
    <id column="operation_id" property="operationId" jdbcType="BIGINT" />
    <result column="resource_id" property="resourceId" jdbcType="BIGINT" />
    <result column="project_id" property="projectId" jdbcType="BIGINT" />
    <result column="cpu" property="cpu" jdbcType="INTEGER" />
    <result column="memory" property="memory" jdbcType="INTEGER" />
    <result column="storage" property="storage" jdbcType="INTEGER" />
    <result column="create_user_id" property="createUserId" jdbcType="VARCHAR" />
    <result column="create_user_name" property="createUserName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user_id" property="updateUserId" jdbcType="VARCHAR" />
    <result column="update_user_name" property="updateUserName" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="status_code" property="statusCode" jdbcType="VARCHAR" />
    <result column="notes" property="notes" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    operation_id, resource_id, project_id, cpu, memory, storage, create_user_id, create_user_name, 
    create_time, update_user_id, update_user_name, update_time, reason, status_code, 
    notes
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from resource_operation
    where operation_id = #{operationId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from resource_operation
    where operation_id = #{operationId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.rongcapital.chorus.das.entity.ResourceOperation" >
    insert into resource_operation (operation_id, resource_id, project_id, 
      cpu, memory, storage, 
      create_user_id, create_user_name, create_time, 
      update_user_id, update_user_name, update_time, 
      reason, status_code, notes
      )
    values (#{operationId,jdbcType=BIGINT}, #{resourceId,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT}, 
      #{cpu,jdbcType=INTEGER}, #{memory,jdbcType=INTEGER}, #{storage,jdbcType=INTEGER}, 
      #{createUserId,jdbcType=VARCHAR}, #{createUserName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUserId,jdbcType=VARCHAR}, #{updateUserName,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{reason,jdbcType=VARCHAR}, #{statusCode,jdbcType=VARCHAR}, #{notes,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.rongcapital.chorus.das.entity.ResourceOperation" >
    insert into resource_operation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="operationId != null" >
        operation_id,
      </if>
      <if test="resourceId != null" >
        resource_id,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="cpu != null" >
        cpu,
      </if>
      <if test="memory != null" >
        memory,
      </if>
      <if test="storage != null" >
        storage,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createUserName != null" >
        create_user_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="updateUserName != null" >
        update_user_name,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="statusCode != null" >
        status_code,
      </if>
      <if test="notes != null" >
        notes,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="operationId != null" >
        #{operationId,jdbcType=BIGINT},
      </if>
      <if test="resourceId != null" >
        #{resourceId,jdbcType=BIGINT},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="cpu != null" >
        #{cpu,jdbcType=INTEGER},
      </if>
      <if test="memory != null" >
        #{memory,jdbcType=INTEGER},
      </if>
      <if test="storage != null" >
        #{storage,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createUserName != null" >
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateUserName != null" >
        #{updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="statusCode != null" >
        #{statusCode,jdbcType=VARCHAR},
      </if>
      <if test="notes != null" >
        #{notes,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.rongcapital.chorus.das.entity.ResourceOperation" >
    update resource_operation
    <set >
      <if test="resourceId != null" >
        resource_id = #{resourceId,jdbcType=BIGINT},
      </if>
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="cpu != null" >
        cpu = #{cpu,jdbcType=INTEGER},
      </if>
      <if test="memory != null" >
        memory = #{memory,jdbcType=INTEGER},
      </if>
      <if test="storage != null" >
        storage = #{storage,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createUserName != null" >
        create_user_name = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateUserName != null" >
        update_user_name = #{updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="statusCode != null" >
        status_code = #{statusCode,jdbcType=VARCHAR},
      </if>
      <if test="notes != null" >
        notes = #{notes,jdbcType=VARCHAR},
      </if>
    </set>
    where operation_id = #{operationId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.rongcapital.chorus.das.entity.ResourceOperation" >
    update resource_operation
    set resource_id = #{resourceId,jdbcType=BIGINT},
      project_id = #{projectId,jdbcType=BIGINT},
      cpu = #{cpu,jdbcType=INTEGER},
      memory = #{memory,jdbcType=INTEGER},
      storage = #{storage,jdbcType=INTEGER},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=VARCHAR},
      update_user_name = #{updateUserName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      reason = #{reason,jdbcType=VARCHAR},
      status_code = #{statusCode,jdbcType=VARCHAR},
      notes = #{notes,jdbcType=VARCHAR}
    where operation_id = #{operationId,jdbcType=BIGINT}
  </update>
</mapper>